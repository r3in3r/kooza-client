{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://api.example.com/servers'; // Replace with your API URL\n  }\n\n  getData() {\n    // Create an array of Observables for the first 5 pages\n    const requests = [];\n    for (let i = 1; i <= 5; i++) {\n      requests.push(this.http.get(`${this.apiUrl}?page=${i}`));\n    }\n    // Combine the results of the multiple requests\n    return forkJoin(requests).pipe(map(responses => {\n      return responses.reduce((acc, response) => {\n        return acc.concat(response.data);\n      }, []);\n    }));\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC,CAAC,CAAC;EAEb;;EAEvCC,OAAO;IACL;IACA,MAAMC,QAAQ,GAAsB,EAAE;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3BD,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAASH,CAAC,EAAE,CAAC,CAAC;;IAG1D;IACA,OAAOP,QAAQ,CAACM,QAAQ,CAAC,CAACK,IAAI,CAC5BV,GAAG,CAAEW,SAAgB,IAAI;MACvB,OAAOA,SAAS,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAI;QACxC,OAAOD,GAAG,CAACE,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,CAAC,CACH;EACH;EAAC;qBApBUf,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAgB,SAAXhB,WAAW;IAAAiB,YAFV;EAAM","names":["forkJoin","map","DataService","constructor","http","getData","requests","i","push","get","apiUrl","pipe","responses","reduce","acc","response","concat","data","factory","providedIn"],"sourceRoot":"","sources":["F:\\Stuff\\TeamAkili\\kooza-client\\src\\app\\data.service.ts"],"sourcesContent":["// src/app/data.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private apiUrl = 'https://api.example.com/servers'; // Replace with your API URL\n\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any> {\n    // Create an array of Observables for the first 5 pages\n    const requests: Observable<any>[] = [];\n    for (let i = 1; i <= 5; i++) {\n      requests.push(this.http.get(`${this.apiUrl}?page=${i}`));\n    }\n\n    // Combine the results of the multiple requests\n    return forkJoin(requests).pipe(\n      map((responses: any[]) => {\n        return responses.reduce((acc, response) => {\n          return acc.concat(response.data);\n        }, []);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}